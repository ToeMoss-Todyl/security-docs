[[prebuilt-rule-8-9-10-prebuilt-rules-8-9-10-summary]]
[role="xpack"]
== Update v8.9.10

This section lists all updates associated with version 8.9.10 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-8-9-10-malicious-remote-file-creation, Malicious Remote File Creation>> | Malicious remote file creation, which can be an indicator of lateral movement activity. | new | 1 

|<<prebuilt-rule-8-9-10-remote-file-creation-on-a-sensitive-directory, Remote File Creation on a Sensitive Directory>> | Discovery of files created by a remote host on sensitive directories and folders. Remote file creation in these directories could indicate a malicious binary or script trying to compromise the system. | new | 1 

|<<prebuilt-rule-8-9-10-potential-data-exfiltration-activity-to-an-unusual-iso-code, Potential Data Exfiltration Activity to an Unusual ISO Code>> | A machine learning job has detected data exfiltration to a particular geo-location (by region name). Data transfers to geo-locations that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | new | 1 

|<<prebuilt-rule-8-9-10-potential-data-exfiltration-activity-to-an-unusual-ip-address, Potential Data Exfiltration Activity to an Unusual IP Address>> | A machine learning job has detected data exfiltration to a particular geo-location (by IP address). Data transfers to geo-locations that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | new | 1 

|<<prebuilt-rule-8-9-10-potential-data-exfiltration-activity-to-an-unusual-destination-port, Potential Data Exfiltration Activity to an Unusual Destination Port>> | A machine learning job has detected data exfiltration to a particular destination port. Data transfer patterns that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | new | 1 

|<<prebuilt-rule-8-9-10-potential-data-exfiltration-activity-to-an-unusual-region, Potential Data Exfiltration Activity to an Unusual Region>> | A machine learning job has detected data exfiltration to a particular geo-location (by region name). Data transfers to geo-locations that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | new | 1 

|<<prebuilt-rule-8-9-10-spike-in-bytes-sent-to-an-external-device, Spike in Bytes Sent to an External Device>> | A machine learning job has detected high bytes of data written to an external device. In a typical operational setting, there is usually a predictable pattern or a certain range of data that is written to external devices. An unusually large amount of data being written is anomalous and can signal illicit data copying or transfer activities. | new | 1 

|<<prebuilt-rule-8-9-10-spike-in-bytes-sent-to-an-external-device-via-airdrop, Spike in Bytes Sent to an External Device via Airdrop>> | A machine learning job has detected high bytes of data written to an external device via Airdrop. In a typical operational setting, there is usually a predictable pattern or a certain range of data that is written to external devices. An unusually large amount of data being written is anomalous and can signal illicit data copying or transfer activities. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-process-writing-data-to-an-external-device, Unusual Process Writing Data to an External Device>> | A machine learning job has detected a rare process writing data to an external device. Malicious actors often use benign-looking processes to mask their data exfiltration activities. The discovery of such a process that has no legitimate reason to write data to external devices can indicate exfiltration. | new | 1 

|<<prebuilt-rule-8-9-10-machine-learning-detected-dga-activity-using-a-known-sunburst-dns-domain, Machine Learning Detected DGA activity using a known SUNBURST DNS domain>> | A supervised machine learning model has identified a DNS question name that used by the SUNBURST malware and is predicted to be the result of a Domain Generation Algorithm. | new | 1 

|<<prebuilt-rule-8-9-10-potential-dga-activity, Potential DGA Activity>> | A population analysis machine learning job detected potential DGA (domain generation algorithm) activity. Such activity is often used by malware command and control (C2) channels. This machine learning job looks for a source IP address making DNS requests that have an aggregate high probability of being DGA activity. | new | 1 

|<<prebuilt-rule-8-9-10-machine-learning-detected-a-dns-request-with-a-high-dga-probability-score, Machine Learning Detected a DNS Request With a High DGA Probability Score>> | A supervised machine learning model has identified a DNS question name with a high probability of sourcing from a Domain Generation Algorithm (DGA), which could indicate command and control network activity. | new | 1 

|<<prebuilt-rule-8-9-10-machine-learning-detected-a-dns-request-predicted-to-be-a-dga-domain, Machine Learning Detected a DNS Request Predicted to be a DGA Domain>> | A supervised machine learning model has identified a DNS question name that is predicted to be the result of a Domain Generation Algorithm (DGA), which could indicate command and control network activity. | new | 1 

|<<prebuilt-rule-8-9-10-high-mean-of-process-arguments-in-an-rdp-session, High Mean of Process Arguments in an RDP Session>> | A machine learning job has detected unusually high number of process arguments in an RDP session. Executing sophisticated attacks such as lateral movement can involve the use of complex commands, obfuscation mechanisms, redirection and piping, which in turn increases the number of arguments in a command. | new | 1 

|<<prebuilt-rule-8-9-10-high-mean-of-rdp-session-duration, High Mean of RDP Session Duration>> | A machine learning job has detected unusually high mean of RDP session duration. Long RDP sessions can be used to evade detection mechanisms via session persistence, and might be used to perform tasks such as lateral movement, that might require uninterrupted access to a compromised machine. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-remote-file-size, Unusual Remote File Size>> | A machine learning job has detected an unusually high file size shared by a remote host indicating potential lateral movement activity. One of the primary goals of attackers after gaining access to a network is to locate and exfiltrate valuable information. Instead of multiple small transfers that can raise alarms, attackers might choose to bundle data into a single large file transfer. | new | 1 

|<<prebuilt-rule-8-9-10-high-variance-in-rdp-session-duration, High Variance in RDP Session Duration>> | A machine learning job has detected unusually high variance of RDP session duration. Long RDP sessions can be used to evade detection mechanisms via session persistence, and might be used to perform tasks such as lateral movement, that might require uninterrupted access to a compromised machine. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-remote-file-directory, Unusual Remote File Directory>> | An anomaly detection job has detected a remote file transfer on an unusual directory indicating a potential lateral movement activity on the host. Many Security solutions monitor well-known directories for suspicious activities, so attackers might use less common directories to bypass monitoring. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-remote-file-extension, Unusual Remote File Extension>> | An anomaly detection job has detected a remote file transfer with a rare extension, which could indicate potential lateral movement activity on the host. | new | 1 

|<<prebuilt-rule-8-9-10-spike-in-number-of-connections-made-from-a-source-ip, Spike in Number of Connections Made from a Source IP>> | A machine learning job has detected a high count of destination IPs establishing an RDP connection with a single source IP. Once an attacker has gained access to one system, they might attempt to access more in the network in search of valuable assets, data, or further access points. | new | 1 

|<<prebuilt-rule-8-9-10-spike-in-number-of-connections-made-to-a-destination-ip, Spike in Number of Connections Made to a Destination IP>> | A machine learning job has detected a high count of source IPs establishing an RDP connection with a single destination IP. Attackers might use multiple compromised systems to attack a target to ensure redundancy in case a source IP gets detected and blocked. | new | 1 

|<<prebuilt-rule-8-9-10-spike-in-number-of-processes-in-an-rdp-session, Spike in Number of Processes in an RDP Session>> | A machine learning job has detected unusually high number of processes started in a single RDP session. Executing a large number of processes remotely on other machines can be an indicator of lateral movement activity. | new | 1 

|<<prebuilt-rule-8-9-10-spike-in-remote-file-transfers, Spike in Remote File Transfers>> | A machine learning job has detected an abnormal volume of remote files shared on the host indicating potential lateral movement activity. One of the primary goals of attackers after gaining access to a network is to locate and exfiltrate valuable information. Attackers might perform multiple small transfers to match normal egress activity in the network, to evade detection. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-time-or-day-for-an-rdp-session, Unusual Time or Day for an RDP Session>> | A machine learning job has detected an RDP session started at an usual time or weekday. An RDP session at an unusual time could be followed by other suspicious activities, so catching this is a good first step in detecting a larger attack. | new | 1 

|<<prebuilt-rule-8-9-10-okta-fastpass-phishing-detection, Okta FastPass Phishing Detection>> | Detects when Okta FastPass prevents a user from authenticating to a phishing website. | new | 3 

|<<prebuilt-rule-8-9-10-unusual-process-spawned-by-a-host, Unusual Process Spawned by a Host>> | A machine learning job has detected a suspicious Windows process. This process has been classified as suspicious in two ways. It was predicted to be suspicious by the ProblemChild supervised ML model, and it was found to be an unusual process, on a host that does not commonly manifest malicious activity. Such a process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-process-spawned-by-a-parent-process, Unusual Process Spawned by a Parent Process>> | A machine learning job has detected a suspicious Windows process. This process has been classified as malicious in two ways. It was predicted to be malicious by the ProblemChild supervised ML model, and it was found to be an unusual child process name, for the parent process, by an unsupervised ML model. Such a process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | new | 1 

|<<prebuilt-rule-8-9-10-unusual-process-spawned-by-a-user, Unusual Process Spawned by a User>> | A machine learning job has detected a suspicious Windows process. This process has been classified as malicious in two ways. It was predicted to be malicious by the ProblemChild supervised ML model, and it was found to be suspicious given that its user context is unusual and does not commonly manifest malicious activity,by an unsupervised ML model. Such a process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | new | 1 

|<<prebuilt-rule-8-9-10-machine-learning-detected-a-suspicious-windows-event-predicted-to-be-malicious-activity, Machine Learning Detected a Suspicious Windows Event Predicted to be Malicious Activity>> | A supervised machine learning model (ProblemChild) has identified a suspicious Windows process event with high probability of it being malicious activity. Alternatively, the model's blocklist identified the event as being malicious. | new | 1 

|<<prebuilt-rule-8-9-10-machine-learning-detected-a-suspicious-windows-event-with-a-high-malicious-probability-score, Machine Learning Detected a Suspicious Windows Event with a High Malicious Probability Score>> | A supervised machine learning model (ProblemChild) has identified a suspicious Windows process event with high probability of it being malicious activity. Alternatively, the model's blocklist identified the event as being malicious. | new | 1 

|<<prebuilt-rule-8-9-10-suspicious-windows-process-cluster-spawned-by-a-host, Suspicious Windows Process Cluster Spawned by a Host>> | A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same host name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | new | 1 

|<<prebuilt-rule-8-9-10-suspicious-windows-process-cluster-spawned-by-a-parent-process, Suspicious Windows Process Cluster Spawned by a Parent Process>> | A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same parent process name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | new | 1 

|<<prebuilt-rule-8-9-10-suspicious-windows-process-cluster-spawned-by-a-user, Suspicious Windows Process Cluster Spawned by a User>> | A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same user name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | new | 1 

|<<prebuilt-rule-8-9-10-first-time-seen-newcredentials-logon-process, First Time Seen NewCredentials Logon Process>> | Identifies a new credentials logon type performed by an unusual process. This may indicate the existence of an access token forging capability that are often abused to bypass access control restrictions. | new | 1 

|<<prebuilt-rule-8-9-10-access-of-stored-browser-credentials, Access of Stored Browser Credentials>> | Identifies the execution of a process with arguments pointing to known browser files that store passwords and cookies. Adversaries may acquire credentials from web browsers by reading files specific to the target browser. | update | 106 

|<<prebuilt-rule-8-9-10-access-to-keychain-credentials-directories, Access to Keychain Credentials Directories>> | Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes and certificates. | update | 106 

|<<prebuilt-rule-8-9-10-dumping-account-hashes-via-built-in-commands, Dumping Account Hashes via Built-In Commands>> | Identifies the execution of macOS built-in commands used to dump user account hashes. Adversaries may attempt to dump credentials to obtain account login information in the form of a hash. These hashes can be cracked or leveraged for lateral movement. | update | 105 

|<<prebuilt-rule-8-9-10-dumping-of-keychain-content-via-security-command, Dumping of Keychain Content via Security Command>> | Adversaries may dump the content of the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. | update | 106 

|<<prebuilt-rule-8-9-10-kerberos-cached-credentials-dumping, Kerberos Cached Credentials Dumping>> | Identifies the use of the Kerberos credential cache (kcc) utility to dump locally cached Kerberos tickets. Adversaries may attempt to dump credential material in the form of tickets that can be leveraged for lateral movement. | update | 105 

|<<prebuilt-rule-8-9-10-keychain-password-retrieval-via-command-line, Keychain Password Retrieval via Command Line>> | Adversaries may collect keychain storage data from a system to in order to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. | update | 106 

|<<prebuilt-rule-8-9-10-webproxy-settings-modification, WebProxy Settings Modification>> | Identifies the use of the built-in networksetup command to configure webproxy settings. This may indicate an attempt to hijack web browser traffic for credential access via traffic sniffing or redirection. | update | 105 

|<<prebuilt-rule-8-9-10-potential-macos-ssh-brute-force-detected, Potential macOS SSH Brute Force Detected>> | Identifies a high number (20) of macOS SSH KeyGen process executions from the same host. An adversary may attempt a brute force attack to obtain unauthorized access to user accounts. | update | 106 

|<<prebuilt-rule-8-9-10-prompt-for-credentials-with-osascript, Prompt for Credentials with OSASCRIPT>> | Identifies the use of osascript to execute scripts via standard input that may prompt a user with a rogue dialog for credentials. | update | 106 

|<<prebuilt-rule-8-9-10-systemkey-access-via-command-line, SystemKey Access via Command Line>> | Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. Adversaries may collect the keychain storage data from a system to acquire credentials. | update | 105 

|<<prebuilt-rule-8-9-10-softwareupdate-preferences-modification, SoftwareUpdate Preferences Modification>> | Identifies changes to the SoftwareUpdate preferences using the built-in defaults command. Adversaries may abuse this in an attempt to disable security updates. | update | 105 

|<<prebuilt-rule-8-9-10-attempt-to-remove-file-quarantine-attribute, Attempt to Remove File Quarantine Attribute>> | Identifies a potential Gatekeeper bypass. In macOS, when applications or programs are downloaded from the internet, there is a quarantine flag set on the file. This attribute is read by Apple's Gatekeeper defense program at execution time. An adversary may disable this attribute to evade defenses. | update | 106 

|<<prebuilt-rule-8-9-10-attempt-to-disable-gatekeeper, Attempt to Disable Gatekeeper>> | Detects attempts to disable Gatekeeper on macOS. Gatekeeper is a security feature that's designed to ensure that only trusted software is run. Adversaries may attempt to disable Gatekeeper before executing malicious code. | update | 105 

|<<prebuilt-rule-8-9-10-attempt-to-install-root-certificate, Attempt to Install Root Certificate>> | Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to their command and control servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. | update | 105 

|<<prebuilt-rule-8-9-10-modification-of-environment-variable-via-launchctl, Modification of Environment Variable via Launchctl>> | Identifies modifications to an environment variable using the built-in launchctl command. Adversaries may execute their own malicious payloads by hijacking certain environment variables to load arbitrary libraries or bypass certain restrictions. | update | 105 

|<<prebuilt-rule-8-9-10-potential-privacy-control-bypass-via-tccdb-modification, Potential Privacy Control Bypass via TCCDB Modification>> | Identifies the use of sqlite3 to directly modify the Transparency, Consent, and Control (TCC) SQLite database. This may indicate an attempt to bypass macOS privacy controls, including access to sensitive resources like the system camera, microphone, address book, and calendar. | update | 106 

|<<prebuilt-rule-8-9-10-potential-privacy-control-bypass-via-localhost-secure-copy, Potential Privacy Control Bypass via Localhost Secure Copy>> | Identifies use of the Secure Copy Protocol (SCP) to copy files locally by abusing the auto addition of the Secure Shell Daemon (sshd) to the authorized application list for Full Disk Access. This may indicate attempts to bypass macOS privacy controls to access sensitive files. | update | 106 

|<<prebuilt-rule-8-9-10-modification-of-safari-settings-via-defaults-command, Modification of Safari Settings via Defaults Command>> | Identifies changes to the Safari configuration using the built-in defaults command. Adversaries may attempt to enable or disable certain Safari settings, such as enabling JavaScript from Apple Events to ease in the hijacking of the users browser. | update | 105 

|<<prebuilt-rule-8-9-10-potential-microsoft-office-sandbox-evasion, Potential Microsoft Office Sandbox Evasion>> | Identifies the creation of a suspicious zip file prepended with special characters. Sandboxed Microsoft Office applications on macOS are allowed to write files that start with special characters, which can be combined with an AutoStart location to achieve sandbox evasion. | update | 105 

|<<prebuilt-rule-8-9-10-tcc-bypass-via-mounted-apfs-snapshot-access, TCC Bypass via Mounted APFS Snapshot Access>> | Identifies the use of the mount_apfs command to mount the entire file system through Apple File System (APFS) snapshots as read-only and with the noowners flag set. This action enables the adversary to access almost any file in the file system, including all user data and files protected by Apple’s privacy framework (TCC). | update | 105 

|<<prebuilt-rule-8-9-10-attempt-to-unload-elastic-endpoint-security-kernel-extension, Attempt to Unload Elastic Endpoint Security Kernel Extension>> | Identifies attempts to unload the Elastic Endpoint Security kernel extension via the kextunload command. | update | 105 

|<<prebuilt-rule-8-9-10-enumeration-of-users-or-groups-via-built-in-commands, Enumeration of Users or Groups via Built-in Commands>> | Identifies the execution of macOS built-in commands related to account or group enumeration. Adversaries may use account and group information to orient themselves before deciding how to act. | update | 106 

|<<prebuilt-rule-8-9-10-execution-via-electron-child-process-node-js-module, Execution via Electron Child Process Node.js Module>> | Identifies attempts to execute a child process from within the context of an Electron application using the child_process Node.js module. Adversaries may abuse this technique to inherit permissions from parent processes. | update | 105 

|<<prebuilt-rule-8-9-10-suspicious-browser-child-process, Suspicious Browser Child Process>> | Identifies the execution of a suspicious browser child process. Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation. | update | 105 

|<<prebuilt-rule-8-9-10-macos-installer-package-spawns-network-event, MacOS Installer Package Spawns Network Event>> | Detects the execution of a MacOS installer package with an abnormal child process (e.g bash) followed immediately by a network connection via a suspicious process (e.g curl). Threat actors will build and distribute malicious MacOS installer packages, which have a .pkg extension, many times imitating valid software in order to persuade and infect their victims often using the package files (e.g pre/post install scripts etc.) to download additional tools or malicious software. If this rule fires it should indicate the installation of a malicious or suspicious package. | update | 105 

|<<prebuilt-rule-8-9-10-suspicious-automator-workflows-execution, Suspicious Automator Workflows Execution>> | Identifies the execution of the Automator Workflows process followed by a network connection from it's XPC service. Adversaries may drop a custom workflow template that hosts malicious JavaScript for Automation (JXA) code as an alternative to using osascript. | update | 105 

|<<prebuilt-rule-8-9-10-apple-script-execution-followed-by-network-connection, Apple Script Execution followed by Network Connection>> | Detects execution via the Apple script interpreter (osascript) followed by a network connection from the same process within a short time period. Adversaries may use malicious scripts for execution and command and control. | update | 105 

|<<prebuilt-rule-8-9-10-shell-execution-via-apple-scripting, Shell Execution via Apple Scripting>> | Identifies the execution of the shell process (sh) via scripting (JXA or AppleScript). Adversaries may use the doShellScript functionality in JXA or do shell script in AppleScript to execute system commands. | update | 105 

|<<prebuilt-rule-8-9-10-suspicious-macos-ms-office-child-process, Suspicious macOS MS Office Child Process>> | Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, and Excel). These child processes are often launched during exploitation of Office applications or by documents with malicious macros. | update | 105 

|<<prebuilt-rule-8-9-10-potential-kerberos-attack-via-bifrost, Potential Kerberos Attack via Bifrost>> | Identifies use of Bifrost, a known macOS Kerberos pentesting tool, which can be used to dump cached Kerberos tickets or attempt unauthorized authentication techniques such as pass-the-ticket/hash and kerberoasting. | update | 105 

|<<prebuilt-rule-8-9-10-attempt-to-mount-smb-share-via-command-line, Attempt to Mount SMB Share via Command Line>> | Identifies the execution of macOS built-in commands to mount a Server Message Block (SMB) network share. Adversaries may use valid accounts to interact with a remote network share using SMB. | update | 106 

|<<prebuilt-rule-8-9-10-remote-ssh-login-enabled-via-systemsetup-command, Remote SSH Login Enabled via systemsetup Command>> | Detects use of the systemsetup command to enable remote SSH Login. | update | 105 

|<<prebuilt-rule-8-9-10-virtual-private-network-connection-attempt, Virtual Private Network Connection Attempt>> | Identifies the execution of macOS built-in commands to connect to an existing Virtual Private Network (VPN). Adversaries may use VPN connections to laterally move and control remote systems on a network. | update | 106 

|<<prebuilt-rule-8-9-10-potential-hidden-local-user-account-creation, Potential Hidden Local User Account Creation>> | Identifies attempts to create a local account that will be hidden from the macOS logon window. This may indicate an attempt to evade user attention while maintaining persistence using a separate local account. | update | 105 

|<<prebuilt-rule-8-9-10-launch-agent-creation-or-modification-and-immediate-loading, Launch Agent Creation or Modification and Immediate Loading>> | An adversary can establish persistence by installing a new launch agent that executes at login by using launchd or launchctl to load a plist into the appropriate directories. | update | 105 

|<<prebuilt-rule-8-9-10-creation-of-hidden-login-item-via-apple-script, Creation of Hidden Login Item via Apple Script>> | Identifies the execution of osascript to create a hidden login item. This may indicate an attempt to persist a malicious program while concealing its presence. | update | 107 

|<<prebuilt-rule-8-9-10-launchdaemon-creation-or-modification-and-immediate-loading, LaunchDaemon Creation or Modification and Immediate Loading>> | Indicates the creation or modification of a launch daemon, which adversaries may use to repeatedly execute malicious payloads as part of persistence. | update | 105 

|<<prebuilt-rule-8-9-10-authorization-plugin-modification, Authorization Plugin Modification>> | Authorization plugins are used to extend the authorization services API and implement mechanisms that are not natively supported by the OS, such as multi-factor authentication with third party software. Adversaries may abuse this feature to persist and/or collect clear text credentials as they traverse the registered plugins during user logon. | update | 105 

|<<prebuilt-rule-8-9-10-suspicious-crontab-creation-or-modification, Suspicious CronTab Creation or Modification>> | Identifies attempts to create or modify a crontab via a process that is not crontab (i.e python, osascript, etc.). This activity should not be highly prevalent and could indicate the use of cron as a persistence mechanism by a threat actor. | update | 105 

|<<prebuilt-rule-8-9-10-suspicious-hidden-child-process-of-launchd, Suspicious Hidden Child Process of Launchd>> | Identifies the execution of a launchd child process with a hidden file. An adversary can establish persistence by installing a new logon item, launch agent, or daemon that executes upon login. | update | 105 

|<<prebuilt-rule-8-9-10-persistence-via-directoryservice-plugin-modification, Persistence via DirectoryService Plugin Modification>> | Identifies the creation or modification of a DirectoryService PlugIns (dsplug) file. The DirectoryService daemon launches on each system boot and automatically reloads after crash. It scans and executes bundles that are located in the DirectoryServices PlugIns folder and can be abused by adversaries to maintain persistence. | update | 105 

|<<prebuilt-rule-8-9-10-persistence-via-docker-shortcut-modification, Persistence via Docker Shortcut Modification>> | An adversary can establish persistence by modifying an existing macOS dock property list in order to execute a malicious application instead of the intended one when invoked. | update | 105 

|<<prebuilt-rule-8-9-10-emond-rules-creation-or-modification, Emond Rules Creation or Modification>> | Identifies the creation or modification of the Event Monitor Daemon (emond) rules. Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. | update | 106 

|<<prebuilt-rule-8-9-10-suspicious-emond-child-process, Suspicious Emond Child Process>> | Identifies the execution of a suspicious child process of the Event Monitor Daemon (emond). Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. | update | 105 

|<<prebuilt-rule-8-9-10-attempt-to-enable-the-root-account, Attempt to Enable the Root Account>> | Identifies attempts to enable the root account using the dsenableroot command. This command may be abused by adversaries for persistence, as the root account is disabled by default. | update | 105 

|<<prebuilt-rule-8-9-10-creation-of-hidden-launch-agent-or-daemon, Creation of Hidden Launch Agent or Daemon>> | Identifies the creation of a hidden launch agent or daemon. An adversary may establish persistence by installing a new launch agent or daemon which executes at login. | update | 106 

|<<prebuilt-rule-8-9-10-finder-sync-plugin-registered-and-enabled, Finder Sync Plugin Registered and Enabled>> | Finder Sync plugins enable users to extend Finder’s functionality by modifying the user interface. Adversaries may abuse this feature by adding a rogue Finder Plugin to repeatedly execute malicious payloads for persistence. | update | 105 

|<<prebuilt-rule-8-9-10-persistence-via-folder-action-script, Persistence via Folder Action Script>> | Detects modification of a Folder Action script. A Folder Action script is executed when the folder to which it is attached has items added or removed, or when its window is opened, closed, moved, or resized. Adversaries may abuse this feature to establish persistence by utilizing a malicious script. | update | 105 

|<<prebuilt-rule-8-9-10-persistence-via-login-or-logout-hook, Persistence via Login or Logout Hook>> | Identifies use of the Defaults command to install a login or logoff hook in MacOS. An adversary may abuse this capability to establish persistence in an environment by inserting code to be executed at login or logout. | update | 106 

|<<prebuilt-rule-8-9-10-potential-persistence-via-login-hook, Potential Persistence via Login Hook>> | Identifies the creation or modification of the login window property list (plist). Adversaries may modify plist files to run a program during system boot or user login for persistence. | update | 106 

|<<prebuilt-rule-8-9-10-sublime-plugin-or-application-script-modification, Sublime Plugin or Application Script Modification>> | Adversaries may create or modify the Sublime application plugins or scripts to execute a malicious payload each time the Sublime application is started. | update | 106 

|<<prebuilt-rule-8-9-10-potential-persistence-via-periodic-tasks, Potential Persistence via Periodic Tasks>> | Identifies the creation or modification of the default configuration for periodic tasks. Adversaries may abuse periodic tasks to execute malicious code or maintain persistence. | update | 105 

|<<prebuilt-rule-8-9-10-unexpected-child-process-of-macos-screensaver-engine, Unexpected Child Process of macOS Screensaver Engine>> | Identifies when a child process is spawned by the screensaver engine process, which is consistent with an attacker's malicious payload being executed after the screensaver activated on the endpoint. An adversary can maintain persistence on a macOS endpoint by creating a malicious screensaver (.saver) file and configuring the screensaver plist file to execute code each time the screensaver is activated. | update | 106 

|<<prebuilt-rule-8-9-10-screensaver-plist-file-modified-by-unexpected-process, Screensaver Plist File Modified by Unexpected Process>> | Identifies when a screensaver plist file is modified by an unexpected process. An adversary can maintain persistence on a macOS endpoint by creating a malicious screensaver (.saver) file and configuring the screensaver plist file to execute code each time the screensaver is activated. | update | 106 

|<<prebuilt-rule-8-9-10-suspicious-calendar-file-modification, Suspicious Calendar File Modification>> | Identifies suspicious modifications of the calendar file by an unusual process. Adversaries may create a custom calendar notification procedure to execute a malicious program at a recurring interval to establish persistence. | update | 105 

|<<prebuilt-rule-8-9-10-potential-persistence-via-atom-init-script-modification, Potential Persistence via Atom Init Script Modification>> | Identifies modifications to the Atom desktop text editor Init File. Adversaries may add malicious JavaScript code to the init.coffee file that will be executed upon the Atom application opening. | update | 105 

|<<prebuilt-rule-8-9-10-apple-scripting-execution-with-administrator-privileges, Apple Scripting Execution with Administrator Privileges>> | Identifies execution of the Apple script interpreter (osascript) without a password prompt and with administrator privileges. | update | 106 

|<<prebuilt-rule-8-9-10-execution-with-explicit-credentials-via-scripting, Execution with Explicit Credentials via Scripting>> | Identifies execution of the security_authtrampoline process via a scripting interpreter. This occurs when programs use AuthorizationExecute-WithPrivileges from the Security.framework to run another program with root privileges. It should not be run by itself, as this is a sign of execution with explicit logon credentials. | update | 105 

|<<prebuilt-rule-8-9-10-suspicious-child-process-of-adobe-acrobat-reader-update-service, Suspicious Child Process of Adobe Acrobat Reader Update Service>> | Detects attempts to exploit privilege escalation vulnerabilities related to the Adobe Acrobat Reader PrivilegedHelperTool responsible for installing updates. For more information, refer to CVE-2020-9615, CVE-2020-9614 and CVE-2020-9613 and verify that the impacted system is patched. | update | 105 

|<<prebuilt-rule-8-9-10-potential-admin-group-account-addition, Potential Admin Group Account Addition>> | Identifies attempts to add an account to the admin group via the command line. This could be an indication of privilege escalation activity. | update | 105 

|<<prebuilt-rule-8-9-10-privilege-escalation-via-root-crontab-file-modification, Privilege Escalation via Root Crontab File Modification>> | Identifies modifications to the root crontab file. Adversaries may overwrite this file to gain code execution with root privileges by exploiting privileged file write or move related vulnerabilities. | update | 105 

|<<prebuilt-rule-8-9-10-remote-file-copy-via-teamviewer, Remote File Copy via TeamViewer>> | Identifies an executable or script file remotely downloaded via a TeamViewer transfer session. | update | 109 

|<<prebuilt-rule-8-9-10-suspicious-werfault-child-process, Suspicious WerFault Child Process>> | A suspicious WerFault child process was detected, which may indicate an attempt to run via the SilentProcessExit registry key manipulation. Verify process details such as command line, network connections and file writes. | update | 110 

|<<prebuilt-rule-8-9-10-suspicious-managed-code-hosting-process, Suspicious Managed Code Hosting Process>> | Identifies a suspicious managed code hosting process which could indicate code injection or other form of suspicious code execution. | update | 106 

|<<prebuilt-rule-8-9-10-remote-execution-via-file-shares, Remote Execution via File Shares>> | Identifies the execution of a file that was created by the virtual system process. This may indicate lateral movement via network file shares. | update | 109 

|<<prebuilt-rule-8-9-10-account-configured-with-never-expiring-password, Account Configured with Never-Expiring Password>> | Detects the creation and modification of an account with the "Don't Expire Password" option Enabled. Attackers can abuse this misconfiguration to persist in the domain and maintain long-term access using compromised accounts with this property. | update | 108 

|<<prebuilt-rule-8-9-10-creation-of-a-hidden-local-user-account, Creation of a Hidden Local User Account>> | Identifies the creation of a hidden local user account by appending the dollar sign to the account name. This is sometimes done by attackers to increase access to a system and avoid appearing in the results of accounts listing using the net users command. | update | 108 

|==============================================
