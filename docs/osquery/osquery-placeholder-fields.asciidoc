[[osquery-placeholder-fields]]
== Use placeholder fields in Osquery queries 

Instead of hard-coding alert and event values into Osquery queries, you can use placeholder fields to dynamically pass this data into queries. Placeholder fields function like parameters. You can use placeholder fields to build flexible and re-usable queries. 

Placeholder fields work in single queries or query packs. They're also supported in the following features:

* <<alerts-run-osquery,Live queries>>
* <<osquery-response-action,Osquery Response Action>>
+
NOTE: Placeholder fields within an Osquery Response Action query will only work if the rule has generated alerts.
* <<invest-guide-run-osquery,Investigation guides using Osquery queries>> 

[float]
[[placeholder-field-syntax]]
=== Placeholder field syntax and requirements

Placeholder fields use http://mustache.github.io/[mustache syntax] and must be wrapped in double curly brackets (`{{example.field}}`). You can use any field within an event or alert document as a placeholder field. 

Queries with placeholder fields _must_ be run against an alert or event. If a placeholder field can't find an alert or event value, the query status will be `Skipped`. 

[float]
[[placeholder-field-example]]
==== Example query with a placeholder field

The following query uses the `{{host.name}}` placeholder field: 

`SELECT * FROM os_version WHERE name = `{{host.name}}``

When you run the query, the value that's stored in the alert or event's `host.name` field will be passed into the `{{host.name}}` placeholder field. 