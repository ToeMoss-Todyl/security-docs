[[vuln-management-overview]]
= Cloud native vulnerability management

Elastic's Cloud Native Vulnerability Management (CNVM) feature helps you identify known vulnerabilities in your cloud workloads.

Setup is quick and easy, using infrastructure as code. For setup instructions, refer to <<vuln-management-get-started, Get started with Cloud Native Vulnerability Management>>.

NOTE: CNVM currently supports only AWS EC2 Linux workloads.

.Requirements
[sidebar]
--
* CNVM is available to all {ecloud} users. On-premise deployments require an https://www.elastic.co/pricing[Enterprise subscription].
* {stack} and {agent} versions 8.8 or higher.
* To view vulnerability scan findings, you need access to the following indices:
** `logs-cloud_security_posture.vulnerabilities-*`
** `logs-cloud_security_posture.vulnerabilities_latest-*`
--

[discrete]
[[vuln-management-overview-how-it-works]]
== How CNVM works

During setup, you will use an infrastructure as code provisioning template to orchestrate the creation of a new virtual machine (VM) in the cloud region you wish to scan. This VM installs the {agent} and the Cloud Native Vulnerability Management (CNVM) integration, and conducts all vulnerability scanning.

Under the hood, the CNVM integration uses https://github.com/aquasecurity/trivy[Trivy], a comprehensive open-source security scanner, to scan cloud workloads and identify security vulnerabilities. During each scan, the VM running the integration takes a snapshot of all cloud workloads in its region using the snapshot APIs of the cloud service provider, and analyzes them for vulnerabilities using Trivy. Therefore, scanning occurs at zero resource utilization on workloads â€” all resource usage occurs on the VM installed during CNVM setup.

The scanning process begins immediately upon deployment, then repeats every twenty-four hours. After each scan, the integration sends the discovered vulnerabilities to {es}, where they appear in the vulnerabilities tab of the <<vuln-management-findings, Findings page>>.

NOTE: Environments with more cloud workloads take longer to scan.

// == Use Cases
